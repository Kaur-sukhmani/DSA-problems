#include<iostream>
using namespace std;
class heap{
    public:
    int arr[100];
    int size;
    heap(){
        arr[0]=-1;
        size=0;
    }
     void insert(int value){
         size=size+1;
         int index=size;
         arr[index]=value;
         while(index>1){
             int parent=index/2;
             if(arr[parent] < arr[index]){
                 //swap
                 int temp;
                 temp=arr[index];
                 arr[index]=arr[parent];
                 arr[parent]=temp;
                 index=parent;
             }
             else{
                 return ;
             }
         }
     }
     void deletenode(){
         int head=arr[1];
         if(size==0){
             cout<<"\n nothing to delete";
         }
         arr[1]=arr[size];
         size--;
         
         //take root node to its correct pos
         int i=1;
         while(i<size){
         int leftchild=2*i;
         int rightchild=2*i+1;
         if(leftchild<size && arr[i]<arr[leftchild]){
            int te=arr[i];
         arr[i]=arr[leftchild];
         arr[leftchild]=te;
         i=leftchild;
         }
         else if(rightchild<size && arr[i]<arr[rightchild]){
             int tem=arr[i];
         arr[i]=arr[rightchild];
         arr[rightchild]=tem;
         i=rightchild;
         }
         else{
             return ;
         }
     }}
     void print(){
         for(int i=1;i<=size;i++){
             cout<<"\n"<<arr[i];
         }
     }

     void heapify(int arr[],int n,int i){
         int largest =i;
         int left=2*i+1;
         int right=2*i+2;
         if(left<n && arr[left]>arr[largest]){
        //      int te=arr[left];
        //  arr[left]=arr[largest];
        //  arr[left]=te;
         largest=left;
         }
         if(right<n && arr[right]>arr[largest]){
        //      int te=arr[right];
        //  arr[right]=arr[largest];
        //  arr[right]=te;
         largest=right;
         }
         if(largest!=i){
             int ter=arr[i];
         arr[i]=arr[largest];
         arr[i]=ter;
         heapify(arr,n,largest);
         }
     }
     };

     int main(){
         heap h;
         h.insert(55);
         h.insert(50);
         h.insert(53);
         h.insert(52);
         h.insert(54);
         h.print();
         
        cout<<"\n after deleting the head node";
        h.deletenode();
        h.print();
        int arr[]={50,3,45,67,34};
        int n=5;
        for(int i=n/2-1;i>=0;i--){
            h.heapify(arr,n,i);
        }
       h.print1(arr);
     }
