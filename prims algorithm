#include<iostream>
using namespace std;
#define V 5
#define INT_MAX 50000
int minkey(int key[],bool mstset[]){
    int min=INT_MAX,minindex;
    for(int v=0;v<V;v++){
        if(mstset[v]==false && key[v]<min){
            min=key[v],minindex=v;
        }
    }
    return minindex;
}
void printMst(int parent[],int graph[V][V]){
    cout<<"\n Edge \t Weight \n";
    for(int i=1;i<V;i++){
        cout<<"\n"<<parent[i]<<" - "<<i<< "   "<<graph[i][parent[i]];
    }
}
void primMst(int graph[V][V]){
    int parent[V];
    int key[V];
    bool mstset[V];
    for(int i=0;i<V;i++){
        key[i]=INT_MAX,mstset[i]=false;
    }
    key[0]=0;
    parent[0]=-1;
    for(int count=0;count<V-1;count++){
    	
      int u=minkey(key,mstset);
        mstset[u]=true;
        for(int v=0;v<V;v++){
            if(graph[u][v] && mstset[v]==false && graph[u][v]<key[v])
            parent[v]=u , key[v]=graph[u][v];
        }    
}
        printMst(parent,graph);
}

int main(){
	int graph[V][V] =  { { 0, 2, 0, 6, 0 }, 
                        { 2, 0, 3, 8, 5 }, 
                        { 0, 3, 0, 0, 7 }, 
                        { 6, 8, 0, 0, 9 }, 
                        { 0, 5, 7, 9, 0 } }; 
/*	cout<<"\n enter the values";
	for(int i=0;i<V;i++){
		for(int j=0;j<V;j++){
			cin>>graph[i][j];
		}
	}*/
	cout<<"\n the graph is:";
		for(int i=0;i<V;i++){
		for(int j=0;j<V;j++){
			cout<<"     "<<graph[i][j];
		}
		cout<<"\n";
	}
	primMst(graph);
	return 0;
}
	
