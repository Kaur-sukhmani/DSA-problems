#include<iostream>
using namespace std;
//sparse matrix 
//array representation 
int main(){
    int r,c;
    cout<<"\n enter the no of rows and columns";
    cin>>r>>c;
    int matrix[r][c];
    cout<<"\n enter the elements in the matrix";
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            cin>>matrix[i][j];
        }
    }
    cout<<"\n the matrix is:";
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            cout<<" "<<matrix[i][j];
        }
        cout<<"\n";
    }
    
    int count=0;
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            if(matrix[i][j]!=0){
        count++;   }   
        }
    }
    int sparse[count][3];
    //  sparse[0][0]=r;
    //  sparse[1][0]=c;
    //  sparse[2][0]=count;
     int k=0;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++){
            if(matrix[i][j]!=0){
                sparse[k][0]=i;
                sparse[k][1]=j;
                sparse[k][2]=matrix[i][j];
                k++;
            }
        }
    }
    cout<<"\n the spasrse matrix representation";
    for(int i=0;i<count;i++){
        for(int j=0;j<3;j++){
            cout<<" "<<sparse[i][j];
        }
        cout<<"\n";
    }
     int r1,c1;
    cout<<"\n enter the no of rows and columns of 2nd matrix ";
    cin>>r1>>c1;
    int matrix1[r1][c1];
    cout<<"\n enter the elements in the matrix2";
    for(int i=0;i<r1;i++){
        for(int j=0;j<c1;j++){
            cin>>matrix1[i][j];
        }
    }
    cout<<"\n the matrix is:";
    for(int i=0;i<r1;i++){
        for(int j=0;j<c1;j++){
            cout<<" "<<matrix[i][j];
        }
        cout<<"\n";
    }
    
    int count1=0;
    for(int i=0;i<r1;i++){
        for(int j=0;j<c1;j++){
            if(matrix1[i][j]!=0){
        count1++;   }   
        }
    }
    int sparse1[count1][3];
    //  sparse[0][0]=r;
    //  sparse[1][0]=c;
    //  sparse[2][0]=count;
     int k1=0;
    for(int i=0;i<r1;i++)
    {
        for(int j=0;j<c1;j++){
            if(matrix[i][j]!=0){
                sparse1[k1][0]=i;
                sparse1[k1][1]=j;
                sparse1[k1][2]=matrix1[i][j];
                k1++;
            }
        }
    }
  cout<<"\n the spasrse matrix2 representation";
    for(int i=0;i<count1;i++){
        for(int j=0;j<3;j++){
            cout<<" "<<sparse1[i][j];
        }
        cout<<"\n";
    }
    cout<<"\n final matrix";
    int p=0,count2=0,count3=0,count4=0;
    int sparse2[20][3];
for(int i=0;i<r;i++){
    for(int j=0;j<c;j++){
        if(matrix[i][1]==matrix1[i][1]){
             sparse2[p][0]=i;
            sparse2[p][1]=j;
            sparse2[p][2]=matrix1[i][1]+matrix[i][1];
            p++;
            count2++;
        }
        else if(matrix[i][j]!=0){
            sparse2[p][0]=i;
            sparse2[p][1]=j;
            sparse2[p][2]=matrix[i][j];
            p++;
            count3++;
        }
        else if(matrix1[i][j]!=0)
        {
             sparse2[p][0]=i;
            sparse2[p][1]=j;
            sparse2[p][2]=matrix1[i][j];
            p++;
            count4++;
        }
    //     int counter=count2+count3+count4;
     }
}int counter=count2+count3+count4;
 cout<<"\n the spasrse matrix representation";
    for(int i=0;i<counter;i++){
        for(int j=0;j<3;j++){
            cout<<" "<<sparse1[i][j];
        }
        cout<<"\n ";
    }
    return 0;
}
