#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<int> topoSort(int V, vector<int> adj[]) {
        vector<int> indeg(V, 0);
        for(int i = 0; i < V; i++) {
            for (size_t j = 0; j < adj[i].size(); j++) {
                int it = adj[i][j];
                indeg[it]++;
            }
        }

        queue<int> q;
        for(int i = 0; i < V; i++){
            if(indeg[i] == 0)
                q.push(i);
        }

        vector<int> sorting_order;
        while(!q.empty()){
            int node = q.front();
            q.pop();
            sorting_order.push_back(node);

            for(size_t i = 0; i < adj[node].size(); i++) {
                int it = adj[node][i];
                indeg[it]--;
                if(indeg[it] == 0) {
                    q.push(it);
                }
            }
        }
        return sorting_order;
    }
};

int main() {
    int V, E;
    cin >> V >> E;
    vector<int> adj[V];

    for(int i = 0; i < E; i++) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
    }

    Solution obj;
    vector<int> ans = obj.topoSort(V, adj);
    for(size_t i = 0; i < ans.size(); i++){
        cout << ans[i] << " ";
    }
    return 0;
}
