//{ Driver Code Starts
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};


// } Driver Code Ends
/* Structure of the linked list node is as
struct Node 
{
    int data;
    struct Node* next;
    Node(int x) { data = x;  next = NULL; }
};
*/


class Solution{
  public:
    //Function to sort the given linked list using Merge Sort.
    //to fin
    Node* middleNode(ListNode* head) {
        //to find the midddle element in the linde
       struct Node* slow;
       struct Node* fast;
        slow=head;
        fast=head->next;
        while(fast!=NULL){
            fast=fast->next;
            slow=slow->next;
        }
        return slow;
    }
    Node* merge(Node* left,Node *right){
       struct Node* dummyhead=new Node;
       struct Node* curr;
        curr=dummyhead;
        while(left!=NULl && right!=NULL){
            if(left->data< right->data){
                curr->next=left;
                curr=curr->next;
                left=left->next;
            }
            else{
                curr->next=right;
                curr=curr->next;
               right=right->next;
            }
        }
        while(left!=NULL){
            curr->next=left;
                curr=curr->next;
                left=left->next;
        }
        while(right!=NULL){
            curr->next=right;
                curr=curr->next;
               right=right->next;
        }
    }
    Node* mergeSort(Node* head) {
        // your code here
       if(head==NULl){
           return head;
       }
           Node *mid=middleNode(ListNode* head);
           Node *start_of_node=mid->next;
           node *left=mergeSort(mid);
            node *left=mergeSort(start_of_node);
            
           merge( left,right);
          
    }
};


//{ Driver Code Starts.

void printList(Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

void push(struct Node** head_ref, int new_data) {
    Node* new_node = new Node(new_data);

    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

int main() {
    long test;
    cin >> test;
    while (test--) {
        struct Node* a = NULL;
        long n, tmp;
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> tmp;
            push(&a, tmp);
        }
        Solution obj;
        a = obj.mergeSort(a);
        printList(a);
    }
    return 0;
}
// } Driver Code Ends
