//circular queue
#include<iostream>
using namespace std;
const int n=5;
int a[n];
int rear=-1,front=-1;
void insert(){
	int item;
	cout<<"\n enter the item";
	cin>>item;
	if((front==0 && rear==n-1)|| front==rear+1)
	{
		cout<<"\n OVERFLOW";
		return;	
	}
	else
	{
	if(front==-1 && rear == -1){
		rear=0;
		front=0;
	}
	else if(rear==n-1){
		rear=0;
	}
	else{
		rear++;
	}
	a[rear]=item;
}
}
void delete1(){
	if(front == -1) {
      cout<<"Queue Underflow\n";
   }
   cout<<"Element deleted from queue is : "<<a[front];
	if(rear==0 && front ==0){
		rear=-1;
		front=-1;
	}
	
	else if(front==n){
		front=0;
	}
	else{
		front++;
	}
	
}
void display(){
	int i,j,k;
	if(front==-1){
		cout<<"\n queue is empty";
	}
	cout<<"\n the elements are:";
	if(front<=rear){
		for(i=front;i<=rear;i++){
			cout<<"\n"<<a[i];
		}
	}
	else{
	if(front>rear){
		for(j=front;j<n-1;j++){
			cout<<"\n"<<a[j];
		}}
	if(front==0){
		for(k=front;k<=rear;k++){
			cout<<"\n"<<a[k];
		}
	}
	}
	}

int main(){
	int x;
	while(true){
		cout<<"\n 1.INSERT";
		cout<<"\n 2.DELETE";
		cout<<"\n 3.DISPLAY";
		cout<<"\n 4.EXIT";
	    cout<<"\n enter any number";
	    cin>>x;
	    switch(x){
	    	case 1:
	    		insert();
	    		break;
	    	case 2:
	    		delete1();
	    		break;
	    	case 3:
	    		display();
	    		break;
	    	case 4:
	    		exit(0);
	    	default:
	    		cout<<"\n the number is unavailable";
	    		
		}
	}
	return 0;
}
