#include<iostream>
using namespace std;
void merge(int A[],int low,int mid,int high){
    int i=low;
    int j=mid+1;
    int k=low;
    int B[high+1];
    while(i<=mid && j<=high){
        if (A[i]<A[j]){
            B[k++]=A[i++];
        }
        else{
            B[k++]=A[j++];
        }
    }
    while(i<=mid){
        B[k++]=A[i++];
    }
    while(j<=high){
        B[k++]=A[j++];
    }
    for(int i=low;i<=high;i++){
        A[i]=B[i];
    }
}
void Iterativemergesort(int A[],int n){
    int p;
    for(p=2;p<=n;p++)//because we need to merge the groups of 2
    {
        for(int i=0;i+p-1<n;i=i+p){
            int low=i;
            int high=i+p-1;
            int mid=(low+high)/2;
            merge(A,low,mid,high);
        }
    }
    if(p/2<n){
        merge(A,0,p/2-1,n-1);
    }
}

int main(){
    int A[]={2,3,5,6,7,9};
    int n=sizeof(A)/sizeof(A[0]);
    Iterativemergesort(A,n);
    for(int i=0;i<n;i++){
        cout<<"\n"<<A[i];
    }
    return 0;
}
