//STACK
#include<iostream>
using namespace std;
int const MAX=5;
int stack[MAX];
int TOP=-1;
void push(){
	if(TOP==MAX-1){
		cout<<"\n overflow and return";
	}
	else{
		int item;
		cout<<"\n enter the item to be inserted";
		cin>>item;
	    TOP++;
		stack[TOP]=item;
	}
	
}
void pop(){
	if(TOP==-1){
		cout<<"\n underflow and return";
	}
	else{
		int item;
		item=stack[TOP];
		cout<<"\n the item deleted is"<<item;
		TOP--;
	}
}
void display(){
	int j;
	cout<<"\n the element int the stack are:";
	for(j=TOP;j>=0;j--){
		cout<<"\n"<<stack[j];
	}	
}
int peek()
{
	return stack[TOP];
}
int isEmpty()
{
	if(TOP==-1)
	return 1;
	else
	return 0;
}
int isfull(){
	if(TOP==MAX-1)
      return 1;
	else
	   return 0;
	
}
int main(){
	int n;
	while(true)
	{
	cout<<"\n 1. PUSH";
	cout<<"\n 2. POP";
	cout<<"\n 3. PEEK";
	cout<<"\n 4. DISPLAY";
	cout<<"\n 5. CHECK EMPTY";
	cout<<"\n 6. CHECK FULL";
	cout<<"\n 7. EXIT";
	cout<<"\n SELECT A NUMBER:";
	cin>>n;
	switch(n){
		case 1:
			push();
			break;
		case 2:
			pop();
			break;
		case 3:
			cout<<"\n Element at top is: "<<peek();
			break;
		case 4:
			display();
			break;
		case 5:
				if(isEmpty())
				{
					cout<<"\n Stack is Empty";
					}	
				else
					cout<<"\n Stack is not empty";
				break;
		case 6:
			if(isfull()){
				cout<<"\n Stack is full";
			}
			else{
				cout<<"\n Stack is not full";
			}
			break;
		case 7:
			exit(0);
		default:
			cout<<"\n the number not found";
	}
}
	return 0;
}
